"use strict";(self.webpackChunkfirst_example=self.webpackChunkfirst_example||[]).push([[290],{4330:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>l,frontMatter:()=>a,metadata:()=>s,toc:()=>u});const s=JSON.parse('{"id":"user-guide/features/queriesFilteringAndSorting","title":"Queries: Filtering and Sorting","description":"You can get a list of Tasks, Workbaskets, Classifications,","source":"@site/docs/user-guide/features/queriesFilteringAndSorting.md","sourceDirName":"user-guide/features","slug":"/user-guide/features/queriesFilteringAndSorting","permalink":"/kadai-doc/docs/user-guide/features/queriesFilteringAndSorting","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"sidebar_position":7},"sidebar":"userSidebar","previous":{"title":"Users","permalink":"/kadai-doc/docs/user-guide/features/users"},"next":{"title":"Reference","permalink":"/kadai-doc/docs/category/reference"}}');var i=r(4848),t=r(8453);const a={sidebar_position:7},o="Queries: Filtering and Sorting",d={},u=[{value:"Query usage in the REST-API",id:"query-usage-in-the-rest-api",level:2}];function c(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"queries-filtering-and-sorting",children:"Queries: Filtering and Sorting"})}),"\n",(0,i.jsx)(n.p,{children:"You can get a list of Tasks, Workbaskets, Classifications,\nUsers and other resources using KADAI queries.\nThey allow filtering and sorting according to different criteria, e.g., priority,\nowner, etc. Queries can be executed using the REST-API or the Java-API."}),"\n",(0,i.jsx)(n.h2,{id:"query-usage-in-the-rest-api",children:"Query usage in the REST-API"}),"\n",(0,i.jsxs)(n.p,{children:["KADAI provides a REST-API described ",(0,i.jsx)(n.a,{href:"../core-concepts/restApi",children:"here"}),'.\nYou should use HTTP GET method to execute a query.\nQuery parameters for filtering and sorting are specified in the HTTP request after "?".\nFor example, the following request will return all Tasks that are owned by ',(0,i.jsx)(n.em,{children:"user-1-1"})," or ",(0,i.jsx)(n.em,{children:"user-1-2"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"GET http://localhost:8080/kadai/api/v1/tasks?owner=user-1-1&owner=user-1-2\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Here is an example of the query from our ",(0,i.jsx)(n.a,{href:"../core-concepts/restApi",children:"REST-API doc"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "tasks": [\n    {\n      "taskId": "TKI:000000000000000000000000000000000000",\n      "externalId": "ETI:000000000000000000000000000000000000",\n      "created": "2025-02-17T16:16:51.910Z",\n      "claimed": "2025-02-18T16:16:51.910Z",\n      "completed": null,\n      "modified": "2025-02-18T16:16:51.910Z",\n      "planned": "2025-02-17T16:16:51.910Z",\n      "received": "2025-02-18T16:16:51.910Z",\n      "due": "2025-02-18T16:16:51.910Z",\n      "name": "Task99",\n      "creator": "creator_user_id",\n      "note": "Some custom Note",\n      "description": "Lorem ipsum dolor sit amet.",\n      "priority": 1,\n      "manualPriority": -1,\n      "state": "CLAIMED",\n      "numberOfComments": 3,\n      "classificationSummary": {\n        "classificationId": "CLI:100000000000000000000000000000000016",\n        "key": "T2000",\n        "applicationEntryPoint": "z",\n        "category": "MANUAL",\n        "domain": "DOMAIN_A",\n        "name": "T-Vertragstermin",\n        "parentId": "",\n        "parentKey": "",\n        ...\n      },\n      ...\n    },\n    ...\n  ]\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["More about queries using the REST-API can be found in the ",(0,i.jsx)(n.a,{href:"https://kadai-io.azurewebsites.net/kadai/swagger-ui/index.html",children:"REST-API Documentation"}),"."]}),"\n",(0,i.jsx)(n.h1,{id:"query-in-java-api",children:"Query in JAVA-API"}),"\n",(0,i.jsxs)(n.p,{children:["You can also execute queries using the ",(0,i.jsx)(n.a,{href:"/kadai-doc/docs/user-guide/core-concepts/javaApiUsage",children:"JAVA-API"})," of KADAI. To do that, create a query using the service of the relevant entity. Then, add filtering and sorting parameters to your query and execute it. When querying for Tasks, you need to use ",(0,i.jsx)(n.code,{children:"TaskService.createTaskQuery()"}),". You can find the query filter and sorting parameters under ",(0,i.jsx)(n.code,{children:"io.kadai.TaskQuery.api"}),".\nHere is an example of a query that returns Tasks owned by ",(0,i.jsx)(n.em,{children:"user-1-1"})," or ",(0,i.jsx)(n.em,{children:"user-1-2"})," sorted by the business process id of the Task:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'List<TaskSummary> tasks = taskService.createTaskQuery()\n    .ownerIn("user-1-1","user-1-2")\n    .orderByBusinessProcessId(SortDirection.ASCENDING)\n    .list();\n'})})]})}function l(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>o});var s=r(6540);const i={},t=s.createContext(i);function a(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);