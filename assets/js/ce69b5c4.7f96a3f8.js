"use strict";(self.webpackChunkfirst_example=self.webpackChunkfirst_example||[]).push([[615],{3905:(e,r,t)=>{t.d(r,{Zo:()=>p,kt:()=>f});var s=t(7294);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);r&&(s=s.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,s)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,s,n=function(e,r){if(null==e)return{};var t,s,n={},a=Object.keys(e);for(s=0;s<a.length;s++)t=a[s],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(s=0;s<a.length;s++)t=a[s],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var u=s.createContext({}),c=function(e){var r=s.useContext(u),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},p=function(e){var r=c(e.components);return s.createElement(u.Provider,{value:r},e.children)},l={inlineCode:"code",wrapper:function(e){var r=e.children;return s.createElement(s.Fragment,{},r)}},d=s.forwardRef((function(e,r){var t=e.components,n=e.mdxType,a=e.originalType,u=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=c(t),f=n,m=d["".concat(u,".").concat(f)]||d[f]||l[f]||a;return t?s.createElement(m,o(o({ref:r},p),{},{components:t})):s.createElement(m,o({ref:r},p))}));function f(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var a=t.length,o=new Array(a);o[0]=d;var i={};for(var u in r)hasOwnProperty.call(r,u)&&(i[u]=r[u]);i.originalType=e,i.mdxType="string"==typeof e?e:n,o[1]=i;for(var c=2;c<a;c++)o[c]=t[c];return s.createElement.apply(null,o)}return s.createElement.apply(null,t)}d.displayName="MDXCreateElement"},9826:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>u,contentTitle:()=>o,default:()=>l,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var s=t(7462),n=(t(7294),t(3905));const a={sidebar_position:6},o="Users",i={unversionedId:"user-guide/features/users",id:"user-guide/features/users",title:"Users",description:"In KADAI, a User is an entity that represents a user. A user is used for authentication as well as for specifiyng the owner of a Task. The User entity has attributes such as name, phone number and e-mail.",source:"@site/docs/user-guide/features/users.md",sourceDirName:"user-guide/features",slug:"/user-guide/features/users",permalink:"/taskana-doc/docs/user-guide/features/users",draft:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"userSidebar",previous:{title:"Monitoring",permalink:"/taskana-doc/docs/user-guide/features/monitoring"},next:{title:"Queries: Filtering and Sorting",permalink:"/taskana-doc/docs/user-guide/features/queriesFilteringAndSorting"}},u={},c=[{value:"Operations on Users",id:"operations-on-users",level:2},{value:"Configuration",id:"configuration",level:2}],p={toc:c};function l(e){let{components:r,...t}=e;return(0,n.kt)("wrapper",(0,s.Z)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"users"},"Users"),(0,n.kt)("p",null,"In KADAI, a User is an entity that represents a user. A user is used for authentication as well as for specifiyng the owner of a Task. The User entity has attributes such as name, phone number and e-mail. "),(0,n.kt)("p",null,'A user can belong to one or multiple groups and have permissions assigned. Groups and permissions are used to determine additinal access rights of the user. For example, if "user-1" belongs to the group "group-1", and "group-1" has access to the Workbasket "workbasket-of-group-1", then "user-1" has access to the "workbasket-of-group-1". Same applies to permissions. Users, Groups and permissons are identified via an ',(0,n.kt)("strong",{parentName:"p"},"AccessId")," in KADAI. The AccessId is used for determining access rights through WorkbasketAccessItems. You can read more about it ",(0,n.kt)("a",{parentName:"p",href:"/taskana-doc/docs/user-guide/core-concepts/overview#workbasketaccessitem"},"here"),". Additionaly, Users and Groups both have ",(0,n.kt)("a",{parentName:"p",href:"/taskana-doc/docs/user-guide/core-concepts/securityAndPermissions#security-roles-in-kadai"},"Roles")," assigned."),(0,n.kt)("h2",{id:"operations-on-users"},"Operations on Users"),(0,n.kt)("p",null,"You can create, get, update and delete a User via UserService in the Java-API. In the REST-API, you can fetch detailed information about Users via the associated API operations.\nA detailed description of the REST-operations on AccessIds, Users and Groups can be found at the follwing links:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://kadai.mybluemix.net/kadai/docs/rest/rest-api.html#_access_id_resource"},"AccessIds")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://kadai.mybluemix.net/kadai/docs/rest/rest-api.html#_user_resource"},"Users & Groups"))),(0,n.kt)("p",null,"You can set up your Users using LDAP. In this case, you can also use the ",(0,n.kt)("a",{parentName:"p",href:"/taskana-doc/docs/user-guide/features/jobs#userinforefreshjob"},"UserInfoRefreshJob")," to keep the Users up to date with your .ldif file."),(0,n.kt)("h2",{id:"configuration"},"Configuration"),(0,n.kt)("p",null,"You can read more about the configuration of Users ",(0,n.kt)("a",{parentName:"p",href:"/taskana-doc/docs/user-guide/configuration/security#users"},"here"),"."))}l.isMDXComponent=!0}}]);