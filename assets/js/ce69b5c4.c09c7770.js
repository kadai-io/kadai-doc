"use strict";(self.webpackChunkfirst_example=self.webpackChunkfirst_example||[]).push([[6298],{1902:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>u,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>a,toc:()=>d});var n=r(4848),i=r(8453);const t={sidebar_position:6},o="Users",a={id:"user-guide/features/users",title:"Users",description:"In KADAI, a User is an entity that represents a user. A user is used for authentication as well as for specifiyng the owner of a Task. The User entity has attributes such as name, phone number and e-mail.",source:"@site/docs/user-guide/features/users.md",sourceDirName:"user-guide/features",slug:"/user-guide/features/users",permalink:"/kadai-doc/docs/user-guide/features/users",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"userSidebar",previous:{title:"Monitoring",permalink:"/kadai-doc/docs/user-guide/features/monitoring"},next:{title:"Queries: Filtering and Sorting",permalink:"/kadai-doc/docs/user-guide/features/queriesFilteringAndSorting"}},u={},d=[{value:"Operations on Users",id:"operations-on-users",level:2},{value:"Configuration",id:"configuration",level:2}];function c(e){const s={a:"a",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"users",children:"Users"})}),"\n",(0,n.jsx)(s.p,{children:"In KADAI, a User is an entity that represents a user. A user is used for authentication as well as for specifiyng the owner of a Task. The User entity has attributes such as name, phone number and e-mail."}),"\n",(0,n.jsxs)(s.p,{children:['A user can belong to one or multiple groups and have permissions assigned. Groups and permissions are used to determine additinal access rights of the user. For example, if "user-1" belongs to the group "group-1", and "group-1" has access to the Workbasket "workbasket-of-group-1", then "user-1" has access to the "workbasket-of-group-1". Same applies to permissions. Users, Groups and permissons are identified via an ',(0,n.jsx)(s.strong,{children:"AccessId"})," in KADAI. The AccessId is used for determining access rights through WorkbasketAccessItems. You can read more about it ",(0,n.jsx)(s.a,{href:"/kadai-doc/docs/user-guide/core-concepts/overview#workbasketaccessitem",children:"here"}),". Additionaly, Users and Groups both have ",(0,n.jsx)(s.a,{href:"/kadai-doc/docs/user-guide/core-concepts/securityAndPermissions#security-roles-in-kadai",children:"Roles"})," assigned."]}),"\n",(0,n.jsx)(s.h2,{id:"operations-on-users",children:"Operations on Users"}),"\n",(0,n.jsx)(s.p,{children:"You can create, get, update and delete a User via UserService in the Java-API. In the REST-API, you can fetch detailed information about Users via the associated API operations.\nA detailed description of the REST-operations on AccessIds, Users and Groups can be found at the follwing links:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"https://kadai.mybluemix.net/kadai/docs/rest/rest-api.html#_access_id_resource",children:"AccessIds"})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"https://kadai.mybluemix.net/kadai/docs/rest/rest-api.html#_user_resource",children:"Users & Groups"})}),"\n"]}),"\n",(0,n.jsxs)(s.p,{children:["You can set up your Users using LDAP. In this case, you can also use the ",(0,n.jsx)(s.a,{href:"/kadai-doc/docs/user-guide/features/jobs#userinforefreshjob",children:"UserInfoRefreshJob"})," to keep the Users up to date with your .ldif file."]}),"\n",(0,n.jsx)(s.h2,{id:"configuration",children:"Configuration"}),"\n",(0,n.jsxs)(s.p,{children:["You can read more about the configuration of Users ",(0,n.jsx)(s.a,{href:"/kadai-doc/docs/user-guide/configuration/security#users",children:"here"}),"."]})]})}function h(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},8453:(e,s,r)=>{r.d(s,{R:()=>o,x:()=>a});var n=r(6540);const i={},t=n.createContext(i);function o(e){const s=n.useContext(t);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),n.createElement(t.Provider,{value:s},e.children)}}}]);